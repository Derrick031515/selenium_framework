name: search_name
before_all: [ ]
after_all: [ ]

steps:
    #编程模式
    - testCase_methodName:
          - search_name.new: package.className
          - search_name.methodName:
                - get: url
                - find: [ xpath, "//*[@id='js_contacts50']/div/div[1]/div/div[1]/a/i" ]
                - click:
                - find: [ id, "//*[@id='js_contacts50']/div/div[1]/ul/li[1]/a" ]
                - click:
                - find: [ ids_index, "//*[@id='__dialog__MNDialog__']/div/div[2]/div/form/div[1]/input"]
                - sendkeys: "${param1}"
                #强制等待
                - wait: "1"
                #刷新页面
                - refresh:
                #获取断言内容的多种方式
                #根据xpath直接定位元素，获取元素值内容判断
                - getAssertsText: [ xpath, "//*[@id='1688855890239805']/ul/li/a/text()" ]
                #根据id直接定位元素，获取元素值内容判断
                - getAssertsText: [ id, "//*[@id='1688855890239805']/ul/li/a/text()" ]
                #定位集合元素，根据集合元素大小断言
                - getAssertsText: [ ids_size, "//*[@id='1688855890239805']/ul/li/a/text()" ]
                - getAssertsText: [ xpath_size, "//*[@id='1688855890239805']/ul/li/a/text()" ]
                #直接定位集合元素，获取元素值内容断言
                - getAssertsText: [ ids_index_num, "//*[@id='1688855890239805']/ul/li/a/text()" ]
                - getAssertsText: [ xpath_index_num, "//*[@id='1688855890239805']/ul/li/a/text()" ]
                #定位上一层，获取集合，循环遍历判断是否包含断言内容
                - getAssertsText: [ ids_fieldNameValue, "//*[@id='1688855890239805']/ul/li/a/text()" ]
                - getAssertsText: [ xpath_fieldNameValue, "//*[@id='1688855890239805']/ul/li/a/text()" ]
                - asserts:
                      - actual: getText
                      - matcher: "${param2}"
                      - expect: "${param3}"
                      - reason: 'reason'
